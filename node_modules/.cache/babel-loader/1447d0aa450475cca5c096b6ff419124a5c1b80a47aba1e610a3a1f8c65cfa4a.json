{"ast":null,"code":"import { classnames } from \"./tools/classnames\";\nimport { serializeStyles } from \"@emotion/serialize\";\nimport { insertStyles, getRegisteredStyles } from \"@emotion/utils\";\nimport { useGuaranteedMemo } from \"./tools/useGuaranteedMemo\";\nimport { matchCSSObject } from \"./types\";\nexport const {\n  createCssAndCx\n} = (() => {\n  function merge(registered, css, className) {\n    const registeredStyles = [];\n    const rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n    if (registeredStyles.length < 2) {\n      return className;\n    }\n    return rawClassName + css(registeredStyles);\n  }\n  function createCssAndCx(params) {\n    const {\n      cache\n    } = params;\n    const css = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const serialized = serializeStyles(args, cache.registered);\n      insertStyles(cache, serialized, false);\n      const className = `${cache.key}-${serialized.name}`;\n      scope: {\n        const arg = args[0];\n        if (!matchCSSObject(arg)) {\n          break scope;\n        }\n        increaseSpecificityToTakePrecedenceOverMediaQueries.saveClassNameCSSObjectMapping(cache, className, arg);\n      }\n      return className;\n    };\n    const cx = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      const className = classnames(args);\n      const feat27FixedClassnames = increaseSpecificityToTakePrecedenceOverMediaQueries.fixClassName(cache, className, css);\n      return merge(cache.registered, css, feat27FixedClassnames);\n      //return merge(cache.registered, css, className);\n    };\n\n    return {\n      css,\n      cx\n    };\n  }\n  return {\n    createCssAndCx\n  };\n})();\nexport function createUseCssAndCx(params) {\n  const {\n    useCache\n  } = params;\n  function useCssAndCx() {\n    const cache = useCache();\n    const {\n      css,\n      cx\n    } = useGuaranteedMemo(() => createCssAndCx({\n      cache\n    }), [cache]);\n    return {\n      css,\n      cx\n    };\n  }\n  return {\n    useCssAndCx\n  };\n}\n// https://github.com/garronej/tss-react/issues/27\nconst increaseSpecificityToTakePrecedenceOverMediaQueries = (() => {\n  const cssObjectMapByCache = new WeakMap();\n  return {\n    \"saveClassNameCSSObjectMapping\": (cache, className, cssObject) => {\n      let cssObjectMap = cssObjectMapByCache.get(cache);\n      if (cssObjectMap === undefined) {\n        cssObjectMap = new Map();\n        cssObjectMapByCache.set(cache, cssObjectMap);\n      }\n      cssObjectMap.set(className, cssObject);\n    },\n    \"fixClassName\": (() => {\n      function fix(classNameCSSObjects) {\n        let isThereAnyMediaQueriesInPreviousClasses = false;\n        return classNameCSSObjects.map(_ref => {\n          let [className, cssObject] = _ref;\n          if (cssObject === undefined) {\n            return className;\n          }\n          let out;\n          if (!isThereAnyMediaQueriesInPreviousClasses) {\n            out = className;\n            for (const key in cssObject) {\n              if (key.startsWith(\"@media\")) {\n                isThereAnyMediaQueriesInPreviousClasses = true;\n                break;\n              }\n            }\n          } else {\n            out = {\n              \"&&\": cssObject\n            };\n          }\n          return out;\n        });\n      }\n      return (cache, className, css) => {\n        const cssObjectMap = cssObjectMapByCache.get(cache);\n        return classnames(fix(className.split(\" \").map(className => [className, cssObjectMap?.get(className)])).map(classNameOrCSSObject => typeof classNameOrCSSObject === \"string\" ? classNameOrCSSObject : css(classNameOrCSSObject)));\n      };\n    })()\n  };\n})();","map":{"version":3,"names":["classnames","serializeStyles","insertStyles","getRegisteredStyles","useGuaranteedMemo","matchCSSObject","createCssAndCx","merge","registered","css","className","registeredStyles","rawClassName","length","params","cache","_len","arguments","args","Array","_key","serialized","key","name","scope","arg","increaseSpecificityToTakePrecedenceOverMediaQueries","saveClassNameCSSObjectMapping","cx","_len2","_key2","feat27FixedClassnames","fixClassName","createUseCssAndCx","useCache","useCssAndCx","cssObjectMapByCache","WeakMap","cssObject","cssObjectMap","get","undefined","Map","set","fix","classNameCSSObjects","isThereAnyMediaQueriesInPreviousClasses","map","_ref","out","startsWith","split","classNameOrCSSObject"],"sources":["/Users/steve.guo/Desktop/code-lib/mui-starter/node_modules/tss-react/esm/cssAndCx.js"],"sourcesContent":["import { classnames } from \"./tools/classnames\";\nimport { serializeStyles } from \"@emotion/serialize\";\nimport { insertStyles, getRegisteredStyles } from \"@emotion/utils\";\nimport { useGuaranteedMemo } from \"./tools/useGuaranteedMemo\";\nimport { matchCSSObject } from \"./types\";\nexport const { createCssAndCx } = (() => {\n    function merge(registered, css, className) {\n        const registeredStyles = [];\n        const rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n        if (registeredStyles.length < 2) {\n            return className;\n        }\n        return rawClassName + css(registeredStyles);\n    }\n    function createCssAndCx(params) {\n        const { cache } = params;\n        const css = (...args) => {\n            const serialized = serializeStyles(args, cache.registered);\n            insertStyles(cache, serialized, false);\n            const className = `${cache.key}-${serialized.name}`;\n            scope: {\n                const arg = args[0];\n                if (!matchCSSObject(arg)) {\n                    break scope;\n                }\n                increaseSpecificityToTakePrecedenceOverMediaQueries.saveClassNameCSSObjectMapping(cache, className, arg);\n            }\n            return className;\n        };\n        const cx = (...args) => {\n            const className = classnames(args);\n            const feat27FixedClassnames = increaseSpecificityToTakePrecedenceOverMediaQueries.fixClassName(cache, className, css);\n            return merge(cache.registered, css, feat27FixedClassnames);\n            //return merge(cache.registered, css, className);\n        };\n        return { css, cx };\n    }\n    return { createCssAndCx };\n})();\nexport function createUseCssAndCx(params) {\n    const { useCache } = params;\n    function useCssAndCx() {\n        const cache = useCache();\n        const { css, cx } = useGuaranteedMemo(() => createCssAndCx({ cache }), [cache]);\n        return { css, cx };\n    }\n    return { useCssAndCx };\n}\n// https://github.com/garronej/tss-react/issues/27\nconst increaseSpecificityToTakePrecedenceOverMediaQueries = (() => {\n    const cssObjectMapByCache = new WeakMap();\n    return {\n        \"saveClassNameCSSObjectMapping\": (cache, className, cssObject) => {\n            let cssObjectMap = cssObjectMapByCache.get(cache);\n            if (cssObjectMap === undefined) {\n                cssObjectMap = new Map();\n                cssObjectMapByCache.set(cache, cssObjectMap);\n            }\n            cssObjectMap.set(className, cssObject);\n        },\n        \"fixClassName\": (() => {\n            function fix(classNameCSSObjects) {\n                let isThereAnyMediaQueriesInPreviousClasses = false;\n                return classNameCSSObjects.map(([className, cssObject]) => {\n                    if (cssObject === undefined) {\n                        return className;\n                    }\n                    let out;\n                    if (!isThereAnyMediaQueriesInPreviousClasses) {\n                        out = className;\n                        for (const key in cssObject) {\n                            if (key.startsWith(\"@media\")) {\n                                isThereAnyMediaQueriesInPreviousClasses = true;\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        out = {\n                            \"&&\": cssObject\n                        };\n                    }\n                    return out;\n                });\n            }\n            return (cache, className, css) => {\n                const cssObjectMap = cssObjectMapByCache.get(cache);\n                return classnames(fix(className\n                    .split(\" \")\n                    .map(className => [\n                    className,\n                    cssObjectMap?.get(className)\n                ])).map(classNameOrCSSObject => typeof classNameOrCSSObject === \"string\"\n                    ? classNameOrCSSObject\n                    : css(classNameOrCSSObject)));\n            };\n        })()\n    };\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}